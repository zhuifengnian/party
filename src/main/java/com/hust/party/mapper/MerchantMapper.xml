<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.MerchantMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.model.Merchant" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="openid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="license" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="representer_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="representer_id_card" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="CHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, openid, name, license, representer_name, representer_id_card, phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from merchant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from merchant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.model.Merchant" >
    insert into merchant (id, openid, name, 
      license, representer_name, representer_id_card, 
      phone)
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{license,jdbcType=VARCHAR}, #{representerName,jdbcType=VARCHAR}, #{representerIdCard,jdbcType=VARCHAR}, 
      #{phone,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.model.Merchant" >
    insert into merchant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="license != null" >
        license,
      </if>
      <if test="representerName != null" >
        representer_name,
      </if>
      <if test="representerIdCard != null" >
        representer_id_card,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="license != null" >
        #{license,jdbcType=VARCHAR},
      </if>
      <if test="representerName != null" >
        #{representerName,jdbcType=VARCHAR},
      </if>
      <if test="representerIdCard != null" >
        #{representerIdCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.model.Merchant" >
    update merchant
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="license != null" >
        license = #{license,jdbcType=VARCHAR},
      </if>
      <if test="representerName != null" >
        representer_name = #{representerName,jdbcType=VARCHAR},
      </if>
      <if test="representerIdCard != null" >
        representer_id_card = #{representerIdCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.model.Merchant" >
    update merchant
    set openid = #{openid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      license = #{license,jdbcType=VARCHAR},
      representer_name = #{representerName,jdbcType=VARCHAR},
      representer_id_card = #{representerIdCard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>