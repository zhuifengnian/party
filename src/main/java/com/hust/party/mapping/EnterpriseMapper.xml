<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hust.party.dao.EnterpriseMapper" >
  <resultMap id="BaseResultMap" type="com.hust.party.pojo.Enterprise" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="licence" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="lead_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="lead_card" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="lead_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="lead_email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="category_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="lead_position" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="open_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="avatarurl" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, nickname, licence, lead_name, lead_card, lead_phone, lead_email, category_id, 
    lead_position, name, open_id, avatarurl, state, address
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from enterprise
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hust.party.pojo.Enterprise" >
    insert into enterprise (id, nickname, licence, 
      lead_name, lead_card, lead_phone, 
      lead_email, category_id, lead_position, 
      name, open_id, avatarurl, 
      state, address)
    values (#{id,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{licence,jdbcType=VARCHAR}, 
      #{leadName,jdbcType=VARCHAR}, #{leadCard,jdbcType=VARCHAR}, #{leadPhone,jdbcType=VARCHAR}, 
      #{leadEmail,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, #{leadPosition,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{avatarurl,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.party.pojo.Enterprise" >
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="licence != null" >
        licence,
      </if>
      <if test="leadName != null" >
        lead_name,
      </if>
      <if test="leadCard != null" >
        lead_card,
      </if>
      <if test="leadPhone != null" >
        lead_phone,
      </if>
      <if test="leadEmail != null" >
        lead_email,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="leadPosition != null" >
        lead_position,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="avatarurl != null" >
        avatarurl,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="licence != null" >
        #{licence,jdbcType=VARCHAR},
      </if>
      <if test="leadName != null" >
        #{leadName,jdbcType=VARCHAR},
      </if>
      <if test="leadCard != null" >
        #{leadCard,jdbcType=VARCHAR},
      </if>
      <if test="leadPhone != null" >
        #{leadPhone,jdbcType=VARCHAR},
      </if>
      <if test="leadEmail != null" >
        #{leadEmail,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="leadPosition != null" >
        #{leadPosition,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null" >
        #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.party.pojo.Enterprise" >
    update enterprise
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="licence != null" >
        licence = #{licence,jdbcType=VARCHAR},
      </if>
      <if test="leadName != null" >
        lead_name = #{leadName,jdbcType=VARCHAR},
      </if>
      <if test="leadCard != null" >
        lead_card = #{leadCard,jdbcType=VARCHAR},
      </if>
      <if test="leadPhone != null" >
        lead_phone = #{leadPhone,jdbcType=VARCHAR},
      </if>
      <if test="leadEmail != null" >
        lead_email = #{leadEmail,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="leadPosition != null" >
        lead_position = #{leadPosition,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null" >
        avatarurl = #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.party.pojo.Enterprise" >
    update enterprise
    set nickname = #{nickname,jdbcType=VARCHAR},
      licence = #{licence,jdbcType=VARCHAR},
      lead_name = #{leadName,jdbcType=VARCHAR},
      lead_card = #{leadCard,jdbcType=VARCHAR},
      lead_phone = #{leadPhone,jdbcType=VARCHAR},
      lead_email = #{leadEmail,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      lead_position = #{leadPosition,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      avatarurl = #{avatarurl,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectUserByChatId" parameterType="string" resultType="int">
    select id from enterprise where  open_id = #{chat_id}
  </select>
  <select id="getQOrder" resultType="com.hust.party.vo.AllOrderVO">
    select  os.id,a.title,a.activity_time as activityTime,os.state,a.minu_people as minuPeople,a.preferential_price as preferentialPrice,os.create_time as createTime
    from orders os left join activity a on  os.activity_id=a.id
    where 1=1
    and os.state=0
    and os.enterprise_id=#{eid}
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
  <select id="getYOrder" resultType="com.hust.party.vo.AllOrderVO">
    select  os.id,a.title,a.activity_time as activityTime,os.state,a.minu_people as minuPeople,a.preferential_price as preferentialPrice,os.create_time as createTime
    from orders os left join activity a on  os.activity_id=a.id
    where 1=1
    and os.state=5
    and os.enterprise_id=#{eid}
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
  <select id="getNoOrder" resultType="com.hust.party.vo.AllOrderVO">
    select  os.id,a.title,a.activity_time as activityTime,os.state,a.minu_people as minuPeople,a.preferential_price as preferentialPrice,os.create_time as createTime
    from orders os left join activity a on  os.activity_id=a.id
    where 1=1
    and os.state=2
    and os.enterprise_id=#{eid}
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
  <select id="getAllOrder" resultType="com.hust.party.vo.AllOrderVO">
    select  os.id,a.title,a.activity_time as activityTime,os.state,a.minu_people as minuPeople,a.preferential_price as preferentialPrice,os.create_time as createTime
    from orders os left join activity a on  os.activity_id=a.id
    where 1=1
    and os.enterprise_id=#{eid}
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>

</mapper>