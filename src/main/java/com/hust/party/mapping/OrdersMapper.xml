<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hust.party.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.hust.party.pojo.Orders" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="activity_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="finish_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="enterprise_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="qr_code" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, activity_id, state, create_time, finish_time, enterprise_id, qr_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hust.party.pojo.Orders" useGeneratedKeys="true" keyProperty="id">
    insert into orders (id, activity_id, state,
      create_time, finish_time, enterprise_id,
       qr_code)
    values (#{id,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{enterpriseId,jdbcType=INTEGER},
      #{qrCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.party.pojo.Orders" useGeneratedKeys="true" keyProperty="id">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="qrCode != null" >
        qr_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="qrCode != null" >
        #{qrCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.party.pojo.Orders" >
    update orders
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="qrCode != null" >
        qr_code = #{qrCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.party.pojo.Orders" >
    update orders
    set activity_id = #{activityId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      qr_code = #{qrCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="select" parameterType="Map" resultMap="BaseResultMap">
    SELECT *
    FROM orders
    WHERE 1=1
    <if test="activityId != null" >
      and  activity_id = #{activityId,jdbcType=INTEGER}
    </if>
    <if test="state != null" >
      and   state = #{state,jdbcType=INTEGER}
    </if>
    <if test="createTime != null" >
      and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="finishTime != null" >
      and   finish_time = #{finishTime,jdbcType=TIMESTAMP}
    </if>
    <if test="enterpriseId != null" >
      and enterprise_id = #{enterpriseId,jdbcType=INTEGER}
    </if>
    <if test="qrCode != null" >
    and  qr_code = #{qrCode,jdbcType=VARCHAR}
    </if>
    <if test="start != null and pageSize!=null">
      limit #{start},#{pageSize}
    </if>
  </select>
  <!-- 查詢数量 -->
  <select id="selectCount" parameterType="com.hust.party.pojo.Orders"
          resultType="Integer">
    SELECT count(*)
    FROM orders
    WHERE 1=1
    <if test="activityId != null" >
      and  activity_id = #{activityId,jdbcType=INTEGER}
    </if>
    <if test="state != null" >
      and   state = #{state,jdbcType=INTEGER}
    </if>
    <if test="createTime != null" >
      and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="finishTime != null" >
      and   finish_time = #{finishTime,jdbcType=TIMESTAMP}
    </if>
    <if test="enterpriseId != null" >
      and  enterprise_id = #{enterpriseId,jdbcType=INTEGER}
    </if>
    <if test="qrCode != null" >
      and qr_code = #{qrCode,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="getOrderId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select id
    from orders
    where activity_id = #{activityId,jdbcType=INTEGER} and (state=1 or state=2)
  </select>
  <select id="getOrder" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from orders
    where
    activity_id = #{activityId,jdbcType=INTEGER}
    and state=2

  </select>



  <!--根据用户id及订单状态，返回订单列表-->
  <select id="getOrderActivityVo" resultType="com.hust.party.vo.OrderActivityVO">
    select o.id as oid, o.state as status, o.create_time as creatTime
    from orders o where o.id = #{oid}
  </select>
</mapper>