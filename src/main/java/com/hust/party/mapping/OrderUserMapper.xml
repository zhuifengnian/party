<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hust.party.dao.OrderUserMapper" >
  <resultMap id="BaseResultMap" type="com.hust.party.pojo.OrderUser" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="creat_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="consume_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, user_id, state, creat_time, consume_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from order_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="select" parameterType="Map" resultMap="BaseResultMap">
    SELECT *
    FROM order_user
    WHERE 1=1
    <if test="orderId != null" >
      and order_id = #{orderId,jdbcType=INTEGER}
    </if>
    <if test="userId != null" >
      and user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="state != null" >
      and state = #{state,jdbcType=INTEGER}
    </if>
    <if test="creatTime != null" >
      and creat_time = #{creatTime,jdbcType=TIMESTAMP}
    </if>
    <if test="consumeTime != null" >
      and consume_time = #{consumeTime,jdbcType=TIMESTAMP}
    </if>
    <if test="start != null and pageSize!=null">
      limit #{start},#{pageSize}
    </if>
  </select>
  <!-- 查詢数量 -->
  <select id="selectCount" parameterType="com.hust.party.pojo.OrderUser"
          resultType="Integer">
    SELECT count(*)
    FROM order_user
    WHERE 1=1
    <if test="orderId != null" >
      and order_id = #{orderId,jdbcType=INTEGER}
    </if>
    <if test="userId != null" >
      and user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="state != null" >
      and state = #{state,jdbcType=INTEGER}
    </if>
    <if test="creatTime != null" >
      and creat_time = #{creatTime,jdbcType=TIMESTAMP}
    </if>
    <if test="consumeTime != null" >
      and consume_time = #{consumeTime,jdbcType=TIMESTAMP}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hust.party.pojo.OrderUser" useGeneratedKeys="true" keyProperty="id">
    insert into order_user (id, order_id, user_id,
    state, creat_time, consume_time
    )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
    #{state,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP}, #{consumeTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.hust.party.pojo.OrderUser" useGeneratedKeys="true" keyProperty="id">
    insert into order_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="consumeTime != null" >
        consume_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consumeTime != null" >
        #{consumeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.party.pojo.OrderUser" >
    update order_user
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consumeTime != null" >
        consume_time = #{consumeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.party.pojo.OrderUser" >
    update order_user
    set order_id = #{orderId,jdbcType=INTEGER},
    user_id = #{userId,jdbcType=INTEGER},
    state = #{state,jdbcType=INTEGER},
    creat_time = #{creatTime,jdbcType=TIMESTAMP},
    consume_time = #{consumeTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--根据用户id拿到用户下的所有订单-->
  <select id="selectOrdersByUid" parameterType="int" resultType="int">
    select order_id from order_user where user_id = #{uid}
    <if test="page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
  <!--根据用户id和订单id拿到用户在那个订单下的数据-->
  <select id = "selectOrderUserByUidAndOid" parameterType="int" resultMap="BaseResultMap">
    select * from order_user where user_id = #{uid} and order_id = #{oid} and state = 1
  </select>
  <!--拿到该订单下用户的数量-->
  <select id="selectUserCnt" parameterType="int" resultType="int">
    select count(*) from order_user where order_id = #{order_id} and   state = 1
  </select>
  <!--根据用户id及订单状态，返回订单列表-->
  <select id="selectOrders" resultType="com.hust.party.vo.OrderActivityVO">
    select o.id as oid, o.state as status, ou.creat_time as creatTime, ou.consume_time as consumeTime
    from orders o left join order_user ou on o.id = ou.order_id where 1=1
    <if test="uid != null">
      and ou.user_id = #{uid}
    </if>
    <if test="orderStatus != null">
      and o.state = #{orderStatus}
    </if>
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
  <!--列出等待消费的订单，包括达到最小人数和人数已满的情况，是selectOrders的特殊情况-->
  <select id="selectWaitConsumeOrders" resultType="com.hust.party.vo.OrderActivityVO">
    select o.id as oid, o.state as status, ou.creat_time as creatTime, ou.consume_time as consumeTime
    from orders o left join order_user ou on o.id = ou.order_id where 1=1
    <if test="uid != null">
      and ou.user_id = #{uid}
    </if>
    <if test="orderStatusReachLeastPeople != null or orderStatusHasFull != null">
      and o.state = #{orderStatusReachLeastPeople} or o.state = #{orderStatusHasFull}
    </if>
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
  <!--列出正在退款的订单，需要订单处于取消的状态，并且user_money还处于未转移到商户的状态，是selectOrders的特殊情况-->
  <select id="selectDrwabackingOrders" resultType="com.hust.party.vo.OrderActivityVO">
    select o.id as oid, o.state as status, ou.creat_time as creatTime, ou.consume_time as consumeTime
    from orders o left join order_user ou on o.id = ou.order_id left join user_money um on um.userorder_id = ou.id
    where 1=1
    <if test="uid != null">
      and ou.user_id = #{uid}
    </if>
    <if test="orderStatusCancel != null and userMoneyNotTransferToEntrerprise != null">
      and o.state = #{orderStatusCancel} and um.state = #{userMoneyNotTransferToEntrerprise}
    </if>
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
</mapper>