<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hust.party.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.hust.party.pojo.Comment" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="enterprise_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="context" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="comment_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, enterprise_id, context, comment_time, score
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hust.party.pojo.Comment" useGeneratedKeys="true" keyProperty="id">
    insert into comment (id, user_id, enterprise_id, 
      context, comment_time, score
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{enterpriseId,jdbcType=INTEGER}, 
      #{context,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, #{score,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hust.party.pojo.Comment" useGeneratedKeys="true" keyProperty="id">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
      <if test="score != null" >
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.party.pojo.Comment" >
    update comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.party.pojo.Comment" >
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      context = #{context,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getEnterpriseComment" resultType="com.hust.party.vo.CommentVo">
    select c.context, c.comment_time,c.score,u.nickname as username,u.avatarurl as avatarurl
    from comment c left join user u on c.user_id=u.id
    where 1=1
    and  c.enterprise_id=#{eid}
    <if test="page != null and page.start != null and page.pageSize!=null">
      limit #{page.start},#{page.pageSize}
    </if>
  </select>
  <select id="getEnterpriseCommentCount" resultType="Integer">
    select count(*)
    from comment c left join user u on c.user_id=u.id
    where 1=1
    and  c.enterprise_id=#{eid}

  </select>
</mapper>